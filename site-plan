NOTES
*Add a honeypot to prevent spammers on the contact form.


controllers
//a controller that controls authorized user access and authorized
//user activities
controller user
{
	function login
	{
		login_model->login($username, $password)
	}
	
	function galleries
	{
		login_model->isloggedin()
		gallery_model->getGalleries(all)
	}
	
	function addGallery
	{
		login_model->isloggedin()
		gallery_model->createGallery($title);
	}
	
	function addPhotos
	{
		login_model->isloggedin()
		gallery_model->addPhotos($gallery, array(photos));
	}
}

//A controller that controls the public part of the site that is viewable
//to any anonymouse user
controller main
{
	index
	
	other site sections
	
	all galleries section
	
	specific gallery section
}

models
//a gallery_model retrieves galleries, creates galleries, deletes galleryies
//renames galleries, adds photos to galleries, deletes photos from galleries


//a user model that verifies a user, and starts new session for the 
//authorized user

views


*Make a login page


Create a gallery view to display all the galleries, with one picture for each
gallery
	create a db query to do this

Create a way to delete photos and galleries
	to delete galleries create a confirmation page


*For the delete Gallery section make a page where the user is asked to verify
*there want to delete the gallery, If yes then delete if no redirect back to gallery

FIX the user authorized gallery.  The pagination is not working.

Crop pictures that are taller than a set height.


USER CONTROLLER TEMPLATE
LOGIN PAGE
&&
ADMIN PAGE
&&
NOT AUTHORIZED PAGE
UPLOAD PAGE
UPLOAD SUCCESS PAGE
ADD NEW GALLERY PAGE
CONFIRM DELETE GALLERY PAGE
-have same style sheet 'authorized.css'

ALL GALLERIES PAGE
&&
SINGLE GALLERY PAGE
&&
SINGLE PHOTO PAGE
-have same style sheet 'gallery.css'

INCLUDES
header
-HTML VALIDATION
-STYLESHEETS
	-960 grid sheets
-JAVASCRIPT Include
footer
-COPYRIGHT
-LOGIN STATUS

FIX PHOTO DELETE
